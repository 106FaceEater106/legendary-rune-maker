<Application x:Class="Legendary_Rune_Maker.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Legendary_Rune_Maker"
             xmlns:controls="clr-namespace:Legendary_Rune_Maker.Controls"
             xmlns:utils="clr-namespace:Legendary_Rune_Maker.Utils"
             StartupUri="LoadingWindow.xaml">
    <Application.Resources>
        <SolidColorBrush x:Key="Normal" Color="#D6C8A5" />
        <SolidColorBrush x:Key="Pressed" Color="#5C5B57" />
        
        <FontFamily x:Key="BeaufortBold">pack://application:,,,/Fonts/#Beaufort</FontFamily>
        <Style x:Key="LoLText" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="{StaticResource BeaufortBold}" />
            <Setter Property="FontSize" Value="14.4" />
            <Setter Property="Foreground" Value="{StaticResource Normal}" />
        </Style>
        
        <BitmapImage x:Key="Icon" UriSource="Images/lrm_icon.ico" />

        <BitmapImage x:Key="HighlightedFill" UriSource="Images/highlighted-fill.png" />
        <BitmapImage x:Key="HighlightedSide" UriSource="Images/highlighted-side.png" />
        <BitmapImage x:Key="HighlightedRight" UriSource="Images/highlighted-right.png" />
        <BitmapImage x:Key="NormalFill" UriSource="Images/enabled-fill.png" />
        <BitmapImage x:Key="NormalSide" UriSource="Images/enabled-side.png" />
        <BitmapImage x:Key="NormalRight" UriSource="Images/enabled-right.png" />
        <BitmapImage x:Key="DisabledFill" UriSource="Images/disabled-fill.png" />
        <BitmapImage x:Key="DisabledSide" UriSource="Images/disabled-side.png" />
        <BitmapImage x:Key="DisabledRight" UriSource="Images/disabled-right.png" />
        <BitmapImage x:Key="PressedFill" UriSource="Images/pressed-fill.png" />
        <BitmapImage x:Key="PressedSide" UriSource="Images/pressed-side.png" />
        <BitmapImage x:Key="PressedRight" UriSource="Images/pressed-right.png" />
        <BitmapImage x:Key="Checkbox" UriSource="Images/checkbox.png" />
        <BitmapImage x:Key="CheckboxHover" UriSource="Images/checkbox-hover.png" />
        <BitmapImage x:Key="CheckboxChecked" UriSource="Images/checkbox-checked.png" />
        <BitmapImage x:Key="CheckboxHoverChecked" UriSource="Images/checkbox-hover-checked.png" />
        <BitmapImage x:Key="Upload" UriSource="Images/upload-button.png" />
        <BitmapImage x:Key="NoChamp" UriSource="Images/-1.png" />

        <BitmapImage x:Key="BgBlue" UriSource="Images/default-bg.jpg" />
        <BitmapImage x:Key="BgForest" UriSource="Images/forest-bg.jpg" />
        <BitmapImage x:Key="BgGray" UriSource="Images/gray-bg.jpg" />
        <BitmapImage x:Key="BgGreen" UriSource="Images/green-bg.jpg" />
        <BitmapImage x:Key="BgPurple" UriSource="Images/purple-bg.jpg" />
        <BitmapImage x:Key="BgRed" UriSource="Images/red-bg.jpg" />
        <BitmapImage x:Key="BgRedDark" UriSource="Images/red_dark-bg.jpg" />
        <BitmapImage x:Key="BgShurima" UriSource="Images/shurima_desert-bg.jpg" />

        <DrawingImage x:Key="Close">
            <DrawingImage.Drawing>
                <DrawingGroup>
                    <GeometryDrawing>
                        <GeometryDrawing.Pen>
                            <Pen Brush="#A09B8C" Thickness="10" />
                        </GeometryDrawing.Pen>
                        <GeometryDrawing.Geometry>
                            <GeometryGroup>
                                <LineGeometry StartPoint="0,0" EndPoint="1,1" />
                                <LineGeometry StartPoint="1,0" EndPoint="0,1" />
                            </GeometryGroup>
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>

        <DrawingImage x:Key="Minimize">
            <DrawingImage.Drawing>
                <DrawingGroup>
                    <GeometryDrawing Brush="Transparent">
                        <GeometryDrawing.Geometry>
                            <RectangleGeometry RadiusX="0" RadiusY="0" Rect="0,0,10,10" />
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>

                    <GeometryDrawing>
                        <GeometryDrawing.Pen>
                            <Pen x:Name="ClosePen" Brush="#A09B8C" Thickness="2" StartLineCap="Flat" />
                        </GeometryDrawing.Pen>
                        <GeometryDrawing.Geometry>
                            <PathGeometry Figures="M0,10 L10,10" />
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>

        <BitmapImage x:Key="Fill" UriSource="Images/Fill_icon.png" />
        <BitmapImage x:Key="Top" UriSource="Images/Top_icon.png" />
        <BitmapImage x:Key="Jungle" UriSource="Images/Jungle_icon.png" />
        <BitmapImage x:Key="Mid" UriSource="Images/Middle_icon.png" />
        <BitmapImage x:Key="Bottom" UriSource="Images/Bottom_icon.png" />
        <BitmapImage x:Key="Support" UriSource="Images/Support_icon.png" />
        
        <BitmapImage x:Key="Selector" UriSource="Images/selector.png" />
        <DrawingImage x:Key="SelectorRune">
            <DrawingImage.Drawing>
                <GeometryDrawing>
                    <GeometryDrawing.Pen>
                        <Pen Brush="#C4A972" Thickness="2" />
                    </GeometryDrawing.Pen>
                    <GeometryDrawing.Geometry>
                        <EllipseGeometry Center="20,20" RadiusX="20" RadiusY="20" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingImage.Drawing>
        </DrawingImage>

        <LinearGradientBrush x:Key="DropdownHover" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#101921" Offset="0" />
            <GradientStop Color="#2C2E2C" Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DropdownHoverBorder" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#F0E5D0" Offset="0" />
            <GradientStop Color="#C99D3F" Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DropdownNormalBorder" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#C5A461" Offset="0" />
            <GradientStop Color="#AD872F" Offset="0.5" />
            <GradientStop Color="#6D5925" Offset="1" />
        </LinearGradientBrush>

        <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="32" />
                            </Grid.ColumnDefinitions>
                            <Border
                                x:Name="Border"
                                Grid.ColumnSpan="2"
                                CornerRadius="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="2" />
                            <Border
                                Grid.Column="0"
                                CornerRadius="0"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="10" />
                            <Path
                                x:Name="Arrow"
                                Grid.Column="1"    
                                Fill="{TemplateBinding BorderBrush}"
                                Stroke="{TemplateBinding BorderBrush}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="M 0 0 L 6 8 L 12 0 Z"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="LightGray" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="Gray" />
                                <Setter Property="Foreground" Value="Gray"/>
                                <Setter TargetName="Arrow" Property="Fill" Value="Gray" />
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource DropdownHover}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DropdownHoverBorder}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="True" />
        </ControlTemplate>

        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="FontFamily" Value="Arial" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Name="Border"
                                Padding="0"
                                Margin="0"
                                BorderThickness="2"
                                CornerRadius="0"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                Height="36"
                                Cursor="Hand">

                            <TextBlock Name="TextBlock" TextAlignment="Center" VerticalAlignment="Center">
                                <ContentPresenter />
                            </TextBlock>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#1E2328"/>
                                <Setter TargetName="TextBlock" Property="Foreground" Value="#E2D8C6" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground" Value="#969285" />
            <Setter Property="BorderBrush" Value="{StaticResource DropdownNormalBorder}" />
            <Setter Property="Background" Value="#10171F" />
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="FontSize" Value="16" />
            <!--<Setter Property="FontWeight" Value="Bold" />-->
            <Setter Property="MinWidth" Value="50"/>
            <Setter Property="MinHeight" Value="32"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton
                                Name="ToggleButton"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Foreground="{TemplateBinding Foreground}"
                                Style="{StaticResource ComboBoxToggleButton}"
                                Grid.Column="2"
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press" />
                            <ContentPresenter
                                Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="10,3,30,3"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center" />
                            <TextBox x:Name="PART_EditableTextBox"
                                Style="{x:Null}"
                                Template="{StaticResource ComboBoxTextBox}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Margin="3,3,23,3"
                                Focusable="True"                               
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True"
                                Focusable="False"
                                PopupAnimation="Slide">
                                <Grid
                                  Name="DropDown"
                                  SnapsToDevicePixels="True"               
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border
                                        x:Name="DropDownBorder"
                                        Background="#10171F"
                                        BorderThickness="2"
                                        BorderBrush="#463714"/>
                                    <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="32"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="CheckBox">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Foreground" Value="#A09684" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <StackPanel Orientation="Horizontal">
                            <controls:FadeImage x:Name="checkboxImage" Source="{StaticResource Checkbox}" Width="12" Margin="1 0 3 0"
                                   SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                            <ContentPresenter/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="checkboxImage" Property="Source" Value="{StaticResource CheckboxChecked}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="checkboxImage" Property="Source" Value="{StaticResource CheckboxHover}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="checkboxImage" Property="Source" Value="{StaticResource CheckboxHoverChecked}"/>
                            </MultiTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="#F0E6CC" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#606060" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Borderless" TargetType="Window">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome GlassFrameThickness="0" CaptionHeight="0" UseAeroCaptionButtons="False" ResizeBorderThickness="7"
                                  CornerRadius="0" />
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LoLWindow" TargetType="Window">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome GlassFrameThickness="0" CaptionHeight="0" UseAeroCaptionButtons="False" ResizeBorderThickness="7"
                                  CornerRadius="0" />
                </Setter.Value>
            </Setter>

            <EventSetter Event="MouseLeftButtonDown" Handler="Window_MouseLeftButtonDown" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Window">
                        <Border Background="{TemplateBinding Background}" BorderBrush="#785A28" BorderThickness="0 2 0 0">
                            <Grid>
                                <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />

                                <Grid VerticalAlignment="Top" Margin="3" HorizontalAlignment="Right">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="20" />
                                        <ColumnDefinition Width="20" />
                                    </Grid.ColumnDefinitions>

                                    <Button Grid.Column="0" Width="20" Height="20" Cursor="Hand"
                                            Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={utils:WindowCommandConverter}, ConverterParameter='Minimize'}">
                                        <Button.Template>
                                            <ControlTemplate>
                                                <Image Width="10" Height="10" Source="{StaticResource Minimize}" />
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>

                                    <Button Grid.Column="1" Width="20" Height="20" Cursor="Hand"
                                            Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={utils:WindowCommandConverter}, ConverterParameter='Close'}">
                                        <Button.Template>
                                            <ControlTemplate>
                                                <Image Width="10" Height="10" Source="{StaticResource Close}" />
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>
                                </Grid>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
