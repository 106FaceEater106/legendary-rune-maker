<Application x:Class="Legendary_Rune_Maker.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Legendary_Rune_Maker"
             xmlns:controls="clr-namespace:Legendary_Rune_Maker.Controls"
             xmlns:utils="clr-namespace:Legendary_Rune_Maker.Utils"
             xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             StartupUri="LoadingWindow.xaml">
    <Application.Resources>
        <Color x:Key="NormalColor">#D6C8A5</Color>
        <Color x:Key="PressedColor">#5C5B57</Color>
        <SolidColorBrush x:Key="Normal" Color="{StaticResource NormalColor}" />
        <SolidColorBrush x:Key="Pressed" Color="{StaticResource PressedColor}" />
        
        <FontFamily x:Key="BeaufortBold">pack://application:,,,/Fonts/#Beaufort</FontFamily>
        <Style x:Key="LoLText" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="{StaticResource BeaufortBold}" />
            <Setter Property="FontSize" Value="14.4" />
            <Setter Property="Foreground" Value="{StaticResource Normal}" />
        </Style>
        
        <BitmapImage x:Key="Icon" UriSource="Images/lrm_icon.ico" />

        <BitmapImage x:Key="HighlightedFill" UriSource="Images/highlighted-fill.png" />
        <BitmapImage x:Key="HighlightedSide" UriSource="Images/highlighted-side.png" />
        <BitmapImage x:Key="HighlightedRight" UriSource="Images/highlighted-right.png" />
        <BitmapImage x:Key="NormalFill" UriSource="Images/enabled-fill.png" />
        <BitmapImage x:Key="NormalSide" UriSource="Images/enabled-side.png" />
        <BitmapImage x:Key="NormalRight" UriSource="Images/enabled-right.png" />
        <BitmapImage x:Key="DisabledFill" UriSource="Images/disabled-fill.png" />
        <BitmapImage x:Key="DisabledSide" UriSource="Images/disabled-side.png" />
        <BitmapImage x:Key="DisabledRight" UriSource="Images/disabled-right.png" />
        <BitmapImage x:Key="PressedFill" UriSource="Images/pressed-fill.png" />
        <BitmapImage x:Key="PressedSide" UriSource="Images/pressed-side.png" />
        <BitmapImage x:Key="PressedRight" UriSource="Images/pressed-right.png" />
        <BitmapImage x:Key="Checkbox" UriSource="Images/checkbox.png" />
        <BitmapImage x:Key="CheckboxHover" UriSource="Images/checkbox-hover.png" />
        <BitmapImage x:Key="CheckboxChecked" UriSource="Images/checkbox-checked.png" />
        <BitmapImage x:Key="CheckboxHoverChecked" UriSource="Images/checkbox-hover-checked.png" />
        <BitmapImage x:Key="NoChamp" UriSource="Images/-1.png" />
        <BitmapImage x:Key="NoSpell" UriSource="Images/no_spell.png" />

        <!--Thanks to Google @ https://www.flaticon.com/packs/material-design-->
        <DrawingImage x:Key="Upload">
            <DrawingImage.Drawing>
                <DrawingGroup>
                    <DrawingGroup>
                        <GeometryDrawing Brush="{StaticResource Normal}" Geometry="F1 M433.5,433.5z M0,0z M140.25,331.5L140.25,331.5 293.25,331.5 293.25,178.5 395.25,178.5 216.75,0 38.25,178.5 140.25,178.5z" />
                        <GeometryDrawing Brush="{StaticResource Normal}">
                            <GeometryDrawing.Geometry>
                                <RectangleGeometry RadiusX="0" RadiusY="0" Rect="38.25,382.5,357,51" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>

        <DrawingImage x:Key="Download">
            <DrawingImage.Drawing>
                <DrawingGroup>
                    <DrawingGroup>
                        <GeometryDrawing Brush="{StaticResource Normal}" Geometry="F1 M433.5,433.5z M0,0z M395.25,153L293.25,153 293.25,0 140.25,0 140.25,153 38.25,153 216.75,331.5 395.25,153z M38.25,382.5L38.25,433.5 395.25,433.5 395.25,382.5 38.25,382.5z" />
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>

        <DrawingImage x:Key="Delete">
            <DrawingImage.Drawing>
                <DrawingGroup>
                    <DrawingGroup>
                        <GeometryDrawing Brush="{StaticResource Normal}" Geometry="F1 M459,459z M0,0z M76.5,408C76.5,436.05,99.45,459,127.5,459L331.5,459C359.55,459,382.5,436.05,382.5,408L382.5,102 76.5,102 76.5,408z M408,25.5L318.75,25.5 293.25,0 165.75,0 140.25,25.5 51,25.5 51,76.5 408,76.5 408,25.5z" />
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>

        <DrawingImage x:Key="Automate">
            <DrawingImage.Drawing>
                <DrawingGroup>
                    <DrawingGroup>
                        <GeometryDrawing Brush="{StaticResource Normal}" Geometry="F1 M459,459z M0,0z M306,153L153,153 153,306 306,306 306,153z M255,255L204,255 204,204 255,204 255,255z M459,204L459,153 408,153 408,102C408,73.95,385.05,51,357,51L306,51 306,0 255,0 255,51 204,51 204,0 153,0 153,51 102,51C73.95,51,51,73.95,51,102L51,153 0,153 0,204 51,204 51,255 0,255 0,306 51,306 51,357C51,385.05,73.95,408,102,408L153,408 153,459 204,459 204,408 255,408 255,459 306,459 306,408 357,408C385.05,408,408,385.05,408,357L408,306 459,306 459,255 408,255 408,204 459,204z M357,357L102,357 102,102 357,102 357,357z" />
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>

        <DrawingImage x:Key="Bug">
            <DrawingImage.Drawing>
                <DrawingGroup>
                    <DrawingGroup>
                        <GeometryDrawing Brush="{StaticResource Normal}" Geometry="F1 M459,459z M0,0z M433.5,127.5L362.1,127.5C349.35,107.1,334.05,89.25,316.201,76.5L357,35.7 321.3,0 265.2,56.1C255,53.55 242.25,51 229.5,51 216.75,51 204,53.55 193.8,56.1L137.7,0 102,35.7 142.8,76.5C124.95,89.25,109.65,107.1,96.9,127.5L25.5,127.5 25.5,178.5 79.05,178.5C76.5,186.15,76.5,196.35,76.5,204L76.5,229.5 25.5,229.5 25.5,280.5 76.5,280.5 76.5,306C76.5,313.65,76.5,323.85,79.05,331.5L25.5,331.5 25.5,382.5 96.9,382.5C122.4,428.4 173.4,459 229.5,459 285.6,459 336.6,428.4 362.1,382.5L433.5,382.5 433.5,331.5 379.95,331.5C382.5,323.85,382.5,313.65,382.5,306L382.5,280.5 433.5,280.5 433.5,229.5 382.5,229.5 382.5,204C382.5,196.35,382.5,186.15,379.95,178.5L433.5,178.5 433.5,127.5z M280.5,331.5L178.5,331.5 178.5,280.5 280.5,280.5 280.5,331.5z M280.5,229.5L178.5,229.5 178.5,178.5 280.5,178.5 280.5,229.5z" />
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>

        <DrawingImage x:Key="RightArrow">
            <DrawingImage.Drawing>
                <DrawingGroup>
                    <DrawingGroup>
                        <GeometryDrawing Brush="{StaticResource Normal}" Geometry="F1 M306,306z M0,0z M94.35,0L94.35,0 58.65,35.7 175.95,153 58.65,270.3 94.35,306 247.35,153z" />
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>

        <DrawingImage x:Key="LeftArrow">
            <DrawingImage.Drawing>
                <DrawingGroup>
                    <DrawingGroup>
                        <GeometryDrawing Brush="{StaticResource Normal}" Geometry="F1 M306,306z M0,0z M247.35,270.3L247.35,270.3 130.05,153 247.35,35.7 211.65,0 58.65,153 211.65,306z" />
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>

        <DrawingImage x:Key="Settings">
            <DrawingImage.Drawing>
                <DrawingGroup>
                    <DrawingGroup>
                        <GeometryDrawing Brush="#9e9b94" Geometry="F1 M507.451,507.45z M0,0z M440.813,280.5C440.813,272.85 443.363,265.2 443.363,255 443.363,244.8 443.363,237.15 440.813,229.5L494.363,186.15C499.463,181.05,499.463,175.95,496.913,170.85L445.913,81.6C443.363,79.05,438.264,76.5,430.613,79.05L366.863,104.55C354.113,94.35,338.813,86.7,323.513,79.05L313.313,12.75C315.863,5.1,308.212,0,303.113,0L201.113,0C196.012,0,188.363,5.1,188.363,10.2L178.163,79.05C162.863,84.15,150.113,94.35,134.813,104.55L73.613,79.05C65.963,76.5,60.863,79.05,55.762,84.15L4.76200000000001,173.4C2.21200000000001,175.95,4.76200000000001,183.6,9.86200000000001,188.7L63.412,229.5C63.412,237.15 60.862,244.8 60.862,255 60.862,265.2 60.862,272.85 63.412,280.5L9.86200000000002,323.85C4.76200000000002,328.951,4.76200000000002,334.05,7.31200000000002,339.151L58.312,428.401C60.862,430.951,65.961,433.501,73.612,430.951L137.362,405.451C150.112,415.651,165.412,423.301,180.712,430.951L190.912,497.251C190.912,502.351,196.012,507.451,203.662,507.451L305.662,507.451C310.763,507.451,318.412,502.35,318.412,497.251L328.612,430.951C343.912,423.301,359.212,415.651,371.962,405.451L435.712,430.951C440.813,433.501,448.462,430.951,451.013,425.85L502.013,336.6C504.563,331.5,504.563,323.85,499.462,321.3L440.813,280.5z M252.113,344.25C203.663,344.25 162.863,303.45 162.863,255 162.863,206.55 203.663,165.75 252.113,165.75 300.563,165.75 341.363,206.55 341.363,255 341.363,303.45 300.563,344.25 252.113,344.25z" />
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>

        <DrawingImage x:Key="Refresh">
            <DrawingImage.Drawing>
                <DrawingGroup>
                    <DrawingGroup>
                        <GeometryDrawing Brush="{StaticResource Normal}" Geometry="F1 M408,408z M0,0z M346.8,61.2C311.1,22.95 260.1,0 204,0 91.8,0 0,91.8 0,204 0,316.2 91.8,408 204,408 298.35,408 377.4,341.7 400.35,255L346.8,255C326.4,313.65 270.3,357 204,357 119.85,357 51,288.15 51,204 51,119.85 119.85,51 204,51 247.35,51 283.05,68.85 311.1,96.9L229.5,178.5 408,178.5 408,0 346.8,61.2z" />
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        
        <DrawingImage x:Key="Back">
            <DrawingImage.Drawing>
                <DrawingGroup>
                    <DrawingGroup>
                        <GeometryDrawing Brush="{StaticResource Normal}" Geometry="F1 M408,408z M0,0z M408,178.5L96.9,178.5 239.7,35.7 204,0 0,204 204,408 239.7,372.3 96.9,229.5 408,229.5 408,178.5z" />
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        
        <BitmapImage x:Key="BgVoid" UriSource="Images/background.png" />
        <BitmapImage x:Key="BgBlue" UriSource="Images/default-bg.jpg" />
        <BitmapImage x:Key="BgForest" UriSource="Images/forest-bg.png" />
        <BitmapImage x:Key="BgGray" UriSource="Images/gray-bg.jpg" />
        <BitmapImage x:Key="BgGreen" UriSource="Images/green-bg.jpg" />
        <BitmapImage x:Key="BgPurple" UriSource="Images/purple-bg.jpg" />
        <BitmapImage x:Key="BgRed" UriSource="Images/red-bg.jpg" />
        <BitmapImage x:Key="BgRedDark" UriSource="Images/red_dark-bg.jpg" />
        <BitmapImage x:Key="BgShurima" UriSource="Images/shurima-desert-bg.jpg" />

        <DrawingImage x:Key="Close">
            <DrawingImage.Drawing>
                <DrawingGroup>
                    <GeometryDrawing>
                        <GeometryDrawing.Pen>
                            <Pen Brush="#A09B8C" Thickness="10" />
                        </GeometryDrawing.Pen>
                        <GeometryDrawing.Geometry>
                            <GeometryGroup>
                                <LineGeometry StartPoint="0,0" EndPoint="1,1" />
                                <LineGeometry StartPoint="1,0" EndPoint="0,1" />
                            </GeometryGroup>
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>

        <DrawingImage x:Key="Minimize">
            <DrawingImage.Drawing>
                <DrawingGroup>
                    <GeometryDrawing Brush="Transparent">
                        <GeometryDrawing.Geometry>
                            <RectangleGeometry RadiusX="0" RadiusY="0" Rect="0,0,10,10" />
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>

                    <GeometryDrawing>
                        <GeometryDrawing.Pen>
                            <Pen x:Name="ClosePen" Brush="#A09B8C" Thickness="2" StartLineCap="Flat" />
                        </GeometryDrawing.Pen>
                        <GeometryDrawing.Geometry>
                            <PathGeometry Figures="M0,10 L10,10" />
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>

        <BitmapImage x:Key="Fill" UriSource="Images/Fill_icon.png" />
        <BitmapImage x:Key="Top" UriSource="Images/Top_icon.png" />
        <BitmapImage x:Key="Jungle" UriSource="Images/Jungle_icon.png" />
        <BitmapImage x:Key="Mid" UriSource="Images/Middle_icon.png" />
        <BitmapImage x:Key="Bottom" UriSource="Images/Bottom_icon.png" />
        <BitmapImage x:Key="Support" UriSource="Images/Support_icon.png" />
        
        <BitmapImage x:Key="Selector" UriSource="Images/selector.png" />
        <DrawingImage x:Key="SelectorRune">
            <DrawingImage.Drawing>
                <GeometryDrawing>
                    <GeometryDrawing.Pen>
                        <Pen Brush="#C4A972" Thickness="2" />
                    </GeometryDrawing.Pen>
                    <GeometryDrawing.Geometry>
                        <EllipseGeometry Center="20,20" RadiusX="20" RadiusY="20" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingImage.Drawing>
        </DrawingImage>

        <LinearGradientBrush x:Key="DropdownHover" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#101921" Offset="0" />
            <GradientStop Color="#2C2E2C" Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DropdownHoverBorder" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#F0E5D0" Offset="0" />
            <GradientStop Color="#C99D3F" Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DropdownNormalBorder" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#C5A461" Offset="0" />
            <GradientStop Color="#AD872F" Offset="0.5" />
            <GradientStop Color="#6D5925" Offset="1" />
        </LinearGradientBrush>

        <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="32" />
                            </Grid.ColumnDefinitions>
                            <Border
                                x:Name="Border"
                                Grid.ColumnSpan="2"
                                CornerRadius="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="2" />
                            <Border
                                Grid.Column="0"
                                CornerRadius="0"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="10" />
                            <Path
                                x:Name="Arrow"
                                Grid.Column="1"    
                                Fill="{TemplateBinding BorderBrush}"
                                Stroke="{TemplateBinding BorderBrush}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="M 0 0 L 6 8 L 12 0 Z"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="#101921" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#6D5925" />
                                <Setter Property="Foreground" Value="{StaticResource Pressed}"/>
                                <Setter TargetName="Arrow" Property="Fill" Value="Gray" />
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource DropdownHover}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DropdownHoverBorder}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="True" />
        </ControlTemplate>

        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="FontFamily" Value="Arial" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Name="Border"
                                Padding="0"
                                Margin="0"
                                BorderThickness="2"
                                CornerRadius="0"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                Height="36"
                                Cursor="Hand">

                            <TextBlock Name="TextBlock" TextAlignment="Center" VerticalAlignment="Center">
                                <ContentPresenter />
                            </TextBlock>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#1E2328"/>
                                <Setter TargetName="TextBlock" Property="Foreground" Value="#E2D8C6" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground" Value="#969285" />
            <Setter Property="BorderBrush" Value="{StaticResource DropdownNormalBorder}" />
            <Setter Property="Background" Value="#10171F" />
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="FontSize" Value="16" />
            <!--<Setter Property="FontWeight" Value="Bold" />-->
            <Setter Property="MinWidth" Value="50"/>
            <!--<Setter Property="MinHeight" Value="32"/>-->
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton
                                Name="ToggleButton"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Foreground="{TemplateBinding Foreground}"
                                Style="{StaticResource ComboBoxToggleButton}"
                                Grid.Column="2"
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press" />
                            <ContentPresenter
                                Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="10,3,30,3"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center" />
                            <TextBox x:Name="PART_EditableTextBox"
                                Style="{x:Null}"
                                Template="{StaticResource ComboBoxTextBox}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Margin="3,3,23,3"
                                Focusable="True"                               
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True"
                                Focusable="False"
                                PopupAnimation="Slide">
                                <Grid
                                  Name="DropDown"
                                  SnapsToDevicePixels="True"               
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border
                                        x:Name="DropDownBorder"
                                        Background="#10171F"
                                        BorderThickness="2"
                                        BorderBrush="#463714"/>
                                    <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="32"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="CheckBox">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Foreground" Value="#A09684" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <StackPanel Orientation="Horizontal">
                            <controls:FadeImage x:Name="checkboxImage" Source="{StaticResource Checkbox}" Width="12" Margin="1 0 3 0"
                                   SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="NearestNeighbor" Stretch="None"/>
                            <ContentPresenter/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="checkboxImage" Property="Source" Value="{StaticResource CheckboxChecked}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="checkboxImage" Property="Source" Value="{StaticResource CheckboxHover}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="checkboxImage" Property="Source" Value="{StaticResource CheckboxHoverChecked}"/>
                            </MultiTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="#F0E6CC" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#606060" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Borderless" TargetType="Window">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome GlassFrameThickness="0" CaptionHeight="0" UseAeroCaptionButtons="False" ResizeBorderThickness="7"
                                  CornerRadius="0" />
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LoLWindow" TargetType="Window">
            <Style.Resources>
                <Style x:Key="MinimizeButton" TargetType="Button">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent},
                                                Converter={utils:StringContainsConverter}, ConverterParameter='NoMinimize'}"
                                     Value="True">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>

                <Style x:Key="SettingsButton" TargetType="Button">
                    <Setter Property="Visibility" Value="Visible" />
                    
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent},
                                                Converter={utils:StringContainsConverter}, ConverterParameter='Settings'}"
                                     Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>

            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome GlassFrameThickness="0" CaptionHeight="0" UseAeroCaptionButtons="False" ResizeBorderThickness="7"
                                  CornerRadius="0" />
                </Setter.Value>
            </Setter>
            
            <!--<EventSetter Event="MouseLeftButtonDown" Handler="Window_MouseLeftButtonDown" />-->

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Window">
                        <Border Background="{TemplateBinding Background}" BorderBrush="#785A28" BorderThickness="0 2 0 0">
                            <Grid>
                                <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />

                                <Grid VerticalAlignment="Top" Margin="3" HorizontalAlignment="Right">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="20" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="20" />
                                    </Grid.ColumnDefinitions>

                                    <Button Grid.Column="0" Width="20" Height="20" Cursor="Hand"
                                            Style="{StaticResource MinimizeButton}"
                                            Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},
                                                Converter={utils:WindowCommandConverter}, ConverterParameter='Minimize'}">
                                        <Button.Template>
                                            <ControlTemplate>
                                                <Image Width="10" Height="10" Source="{StaticResource Minimize}" />
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>

                                    <Button Grid.Column="1" Width="20" Height="20" Cursor="Hand"
                                            Style="{StaticResource SettingsButton}"
                                            Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},
                                                Converter={utils:WindowCommandConverter}, ConverterParameter='Settings'}">
                                        <Button.Template>
                                            <ControlTemplate>
                                                <Image Width="10" Height="10" Source="{StaticResource Settings}" />
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>

                                    <Button Grid.Column="2" Width="20" Height="20" Cursor="Hand"
                                            Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},
                                                Converter={utils:WindowCommandConverter}, ConverterParameter='Close'}">
                                        <Button.Template>
                                            <ControlTemplate>
                                                <Image Width="10" Height="10" Source="{StaticResource Close}" />
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>
                                </Grid>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="NoBackgroundItem" TargetType="{x:Type ListViewItem}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <ContentPresenter />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button">
            <Style.Resources>
                <Style x:Key="TriangleLeft" TargetType="Polygon">
                    <Setter Property="Points" Value="0,0 0,100 55,50" />
                </Style>
                
                <Style x:Key="TriangleRight" TargetType="Polygon">
                    <Setter Property="Points" Value="100,0 100,100 45,50" />
                </Style>
                
                <Style x:Key="TriangleTop" TargetType="Polygon">
                    <Setter Property="Points" Value="0,0 100,0 50,50" />
                </Style>

                <Style x:Key="TriangleBottom" TargetType="Polygon">
                    <Setter Property="Points" Value="0,100 100,100 50,50" />
                </Style>

                <Style x:Key="BorderBackgroundStyle" TargetType="Border">
                    <!--<Setter Property="Background">
                        <Setter.Value>
                            <VisualBrush>
                                <VisualBrush.Visual>
                                    <Canvas Width="20" Height="20">
                                        <Rectangle Fill="Magenta" Width="20" Height="200" />
                                        <Rectangle Width="20" Height="100" HorizontalAlignment="Left">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                    <GradientStop Color="#060E17" Offset="0" />
                                                    <GradientStop Color="#0000" Offset="0.5" />
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        --><!--<Polygon Points="100,0 100,100 45,50">
                                                <Polygon.Fill>
                                                    <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                                                        <GradientStop Color="#060E17" Offset="0" />
                                                        <GradientStop Color="#1E2328" Offset="0.03" />
                                                    </LinearGradientBrush>
                                                </Polygon.Fill>
                                            </Polygon>
                                            <Polygon Points="0,0 100,0 50,50">
                                                <Polygon.Fill>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                        <GradientStop Color="#060E17" Offset="0" />
                                                        <GradientStop Color="#1E2328" Offset="0.03" />
                                                    </LinearGradientBrush>
                                                </Polygon.Fill>
                                            </Polygon>
                                            <Polygon Points="0,100 100,100 50,50">
                                                <Polygon.Fill>
                                                    <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                                        <GradientStop Color="#060E17" Offset="0" />
                                                        <GradientStop Color="#1E2328" Offset="0.03" />
                                                    </LinearGradientBrush>
                                                </Polygon.Fill>
                                            </Polygon>--><!--
                                    </Canvas>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Setter.Value>
                    </Setter>-->
                </Style>

                <Color x:Key="BorderNormalA">#C8AA6D</Color>
                <Color x:Key="BorderNormalB">#795C28</Color>
                <Color x:Key="BorderHighlightA">#EFE5D6</Color>
                <Color x:Key="BorderHighlightB">#C89C3D</Color>
                <Color x:Key="BorderPressedA">#C8AA6E</Color>
                <Color x:Key="BorderPressedB">#795C28</Color>
                <Color x:Key="BorderDisabled">#5C5B57</Color>

                <Color x:Key="BackNormal">#1E2328</Color>
                <Color x:Key="BackHighlightA">#1E232A</Color>
                <Color x:Key="BackHighlightB">#443E2C</Color>

                <Duration x:Key="TransitionDuration">0:0:0.1</Duration>
            </Style.Resources>

            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Height" Value="34" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="BtnBorder" Style="{StaticResource BorderBackgroundStyle}"
                                BorderThickness="2">
                            <Grid>
                                <Grid x:Name="BlackFade">
                                    <Rectangle Width="2" HorizontalAlignment="Left">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                <GradientStop Color="#060E17" Offset="0" />
                                                <GradientStop Color="#0000" Offset="1" />
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>

                                    <Rectangle Width="2" HorizontalAlignment="Right">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                                                <GradientStop Color="#060E17" Offset="0" />
                                                <GradientStop Color="#0000" Offset="1" />
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>

                                    <Rectangle Height="2" VerticalAlignment="Top">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <GradientStop Color="#060E17" Offset="0" />
                                                <GradientStop Color="#0000" Offset="1" />
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>

                                    <Rectangle Height="2" VerticalAlignment="Bottom">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                                <GradientStop Color="#060E17" Offset="0" />
                                                <GradientStop Color="#0000" Offset="1" />
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Grid>

                                <TextBlock x:Name="Text" Text="{TemplateBinding Content, Converter={utils:UppercaseConverter}}"
                                           HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource LoLText}">
                                            <Setter Property="Visibility" Value="Collapsed" />

                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, Converter={utils:ObjectToTypeConverter}}"
                                                     Value="{x:Type sys:String}">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>

                                <ContentPresenter Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}">
                                    <ContentPresenter.Style>
                                        <Style TargetType="ContentPresenter">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Visibility, ElementName=Text}" Value="Visible">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContentPresenter.Style>
                                </ContentPresenter>
                            </Grid>

                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop x:Name="BackA" Color="{StaticResource BackNormal}" Offset="0" />
                                    <GradientStop x:Name="BackB" Color="{StaticResource BackNormal}" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>

                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop x:Name="BorderA" Color="{StaticResource BorderNormalA}" Offset="0" />
                                    <GradientStop x:Name="BorderB" Color="{StaticResource BorderNormalB}" Offset="1" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>

                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource PressedColor}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground.Color" />

                                        <ColorAnimation To="{StaticResource BorderPressedA}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="BorderA" Storyboard.TargetProperty="Color" />
                                        <ColorAnimation To="{StaticResource BorderPressedB}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="BorderB" Storyboard.TargetProperty="Color" />
                                        <ColorAnimation To="{StaticResource BackHighlightA}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="BackA" Storyboard.TargetProperty="Color" />
                                        <ColorAnimation To="{StaticResource BackHighlightB}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="BackB" Storyboard.TargetProperty="Color" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="PreviewMouseLeftButtonUp">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource NormalColor}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground.Color" />

                                        <ColorAnimation To="{StaticResource BorderHighlightA}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="BorderA" Storyboard.TargetProperty="Color" />
                                        <ColorAnimation To="{StaticResource BorderHighlightB}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="BorderB" Storyboard.TargetProperty="Color" />
                                        <ColorAnimation To="{StaticResource BackHighlightA}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="BackA" Storyboard.TargetProperty="Color" />
                                        <ColorAnimation To="{StaticResource BackHighlightB}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="BackB" Storyboard.TargetProperty="Color" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="0" Duration="{StaticResource TransitionDuration}"
                                                         Storyboard.TargetName="BlackFade" Storyboard.TargetProperty="Opacity" />

                                        <ColorAnimation To="{StaticResource BorderHighlightA}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="BorderA" Storyboard.TargetProperty="Color" />
                                        <ColorAnimation To="{StaticResource BorderHighlightB}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="BorderB" Storyboard.TargetProperty="Color" />
                                        <ColorAnimation To="{StaticResource BackHighlightA}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="BackA" Storyboard.TargetProperty="Color" />
                                        <ColorAnimation To="{StaticResource BackHighlightB}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="BackB" Storyboard.TargetProperty="Color" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard x:Name="LeaveStory">
                                    <Storyboard FillBehavior="Stop">
                                        <DoubleAnimation To="1" Duration="{StaticResource TransitionDuration}"
                                                         Storyboard.TargetName="BlackFade" Storyboard.TargetProperty="Opacity" />

                                        <ColorAnimation To="{StaticResource BorderNormalA}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="BorderA" Storyboard.TargetProperty="Color" />
                                        <ColorAnimation To="{StaticResource BorderNormalB}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="BorderB" Storyboard.TargetProperty="Color" />
                                        <ColorAnimation To="{StaticResource BackNormal}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="BackA" Storyboard.TargetProperty="Color" />
                                        <ColorAnimation To="{StaticResource BackNormal}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="BackB" Storyboard.TargetProperty="Color" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation To="{StaticResource PressedColor}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground.Color" />

                                            <ColorAnimation To="{StaticResource BorderDisabled}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="BorderA" Storyboard.TargetProperty="Color" />
                                            <ColorAnimation To="{StaticResource BorderDisabled}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="BorderB" Storyboard.TargetProperty="Color" />
                                            <ColorAnimation To="{StaticResource BackNormal}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="BackA" Storyboard.TargetProperty="Color" />
                                            <ColorAnimation To="{StaticResource BackNormal}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="BackB" Storyboard.TargetProperty="Color" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation To="{StaticResource NormalColor}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground.Color" />

                                            <ColorAnimation To="{StaticResource BorderNormalA}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="BorderA" Storyboard.TargetProperty="Color" />
                                            <ColorAnimation To="{StaticResource BorderNormalB}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="BorderB" Storyboard.TargetProperty="Color" />
                                            <ColorAnimation To="{StaticResource BackNormal}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="BackA" Storyboard.TargetProperty="Color" />
                                            <ColorAnimation To="{StaticResource BackNormal}" Duration="{StaticResource TransitionDuration}"
                                                        Storyboard.TargetName="BackB" Storyboard.TargetProperty="Color" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
